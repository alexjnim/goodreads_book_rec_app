apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: flask-app
  name: flask-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
      - image: alexnimjli/book_rec_flask_app:1.0.0
        name: flask-app
        ports:
        - containerPort: 8000
        volumeMounts:
        - mountPath: app/data/public-viewer-book-rec-app-2-15084ef3a6b9.json
          name: gbq-public-key
          subPath: public-key.json
      - image: nginx:1.13-alpine
        name: nginx-proxy
        command: ["/bin/sh", "-c", "envsubst < /etc/nginx/conf.d/default.conf.template > /etc/nginx/conf.d/default.conf; nginx -g 'daemon off;'"]
        ports:
        - containerPort: 8888
        env:
          - name: SERVER_NAME
            valueFrom:
              configMapKeyRef:
                name: nginx-config
                key: SERVER_NAME
          - name: FLASK_APP_SERVICE_HOST
            valueFrom:
              configMapKeyRef:
                name: nginx-config
                key: FLASK_APP_SERVICE_HOST
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf.template
          name: nginx-config
          subPath: nginx.conf
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config
      - name: gbq-public-key
        configMap:
          name: gbq-public-key
